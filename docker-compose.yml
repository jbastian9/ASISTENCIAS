services:
  postgres:
    container_name: ${CONTAINER_POSTGRES}
    image: postgres:15
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${PORT_POSTGRES}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    container_name: ${CONTAINER_REDIS}
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"

  minio:
    container_name: ${CONTAINER_MINIO}
    image: minio/minio
    restart: always
    env_file:
      - .env
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    ports:
      - "${PORT_MINIO}:9000"
    command: server /data
    volumes:
      - minio_data:/data

  smtp:
    container_name: ${CONTAINER_SMTP}
    image: mailhog/mailhog
    restart: always
    ports:
      - "${PORT_SMTP}:1025"

  pgadmin:
    container_name: ${CONTAINER_PGADMIN}
    image: dpage/pgadmin4
    restart: always
    env_file:
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PORT_PGADMIN}:80"
    depends_on:
      - postgres

  backend:
    container_name: ${CONTAINER_BACKEND}
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    working_dir: /backend
    volumes:
      - ./backend:/backend
    env_file:
      - .env
    environment:
      - PORT=${PORT_BACKEND}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_USE_TLS=${SMTP_USE_TLS}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=${JWT_ACCESS_TOKEN_EXPIRE_MINUTES}
      - FRONTEND_ORIGIN=${FRONTEND_ORIGIN}
      - BACKEND_ORIGIN=${BACKEND_ORIGIN}
    ports:
      - "${PORT_BACKEND}:8000"
    depends_on:
      - postgres
      - redis
      - minio
      - smtp

  frontend:
    container_name: ${CONTAINER_FRONTEND}
    build:
      context: ./frontend
      dockerfile: ../docker/Dockerfile.frontend
    env_file:
      - .env
    working_dir: /frontend
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    environment:
      - VITE_APP_NAME=${APP_NAME}
      - VITE_BACKEND_ORIGEN=${BACKEND_ORIGIN}
    ports:
      - "${PORT_FRONTEND}:5173"
    command: ["npm", "run", "dev", "--", "--host"]
    depends_on:
      - backend

volumes:
  postgres_data:
  minio_data:

networks:
  default:
    name: ${NETWORK}
    driver: bridge
